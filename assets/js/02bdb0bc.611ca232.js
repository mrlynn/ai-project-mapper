"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3160],{4129:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>n,toc:()=>c});var n=o(6246),a=o(4848),i=o(8453);const l={title:"AI-Driven Development",author:"Michael Lynn",author_title:"Developer Advocate @ MongoDB",author_url:"https://github.com/mrlynn",author_image_url:"https://avatars.githubusercontent.com/u/192552?v=4",tags:["ai","llm","development","blog"]},r="How Project Mapper Bridges the Gap Between Your Code and LLMs",s={authorsImageUrls:[void 0]},c=[{value:"The Context Problem",id:"the-context-problem",level:2}];function p(e){const t={em:"em",h2:"h2",p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["As part of my job as a Developer Advocate at Mongodb, I'm painfully aware of the challenges developers face today. With the volume and velocity, and complexity of projects, Large Language Models (LLMs) like ChatGPT, Claude, and GitHub Copilot have quickly become critical tools developers must depend on. I use these tools every day to assist with code writing, debugging, explaining complex systems, and even architecting solutions. However, if you've tried using these tools for substantial work on an existing codebase, you've likely faced a significant limitation: ",(0,a.jsx)(t.em,{children:"context"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"the-context-problem",children:"The Context Problem"}),"\n",(0,a.jsx)(t.p,{children:"The tools I've mentioned and the LLMs upon which they depend have limits when it comes to their context window... the amount of text they can see and understand at one time. Despite many of the recent improvements that have expanded context windows, they still can't ingest and fully understand entire large codebases, particularly for medium to large projects. When you attempt to work with an LLM on an existing project, you'll likely run into these challenges:"})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},6246:e=>{e.exports=JSON.parse('{"permalink":"/ai-project-mapper/blog/2025/03/12/ai-assisted-development","editUrl":"https://github.com/mrlynn/ai-project-mapper/tree/main/blog/blog/2025-03-12-ai-assisted-development.md","source":"@site/blog/2025-03-12-ai-assisted-development.md","title":"AI-Driven Development","description":"As part of my job as a Developer Advocate at Mongodb, I\'m painfully aware of the challenges developers face today. With the volume and velocity, and complexity of projects, Large Language Models (LLMs) like ChatGPT, Claude, and GitHub Copilot have quickly become critical tools developers must depend on. I use these tools every day to assist with code writing, debugging, explaining complex systems, and even architecting solutions. However, if you\'ve tried using these tools for substantial work on an existing codebase, you\'ve likely faced a significant limitation: context.","date":"2025-03-12T00:00:00.000Z","tags":[{"inline":true,"label":"ai","permalink":"/ai-project-mapper/blog/tags/ai"},{"inline":true,"label":"llm","permalink":"/ai-project-mapper/blog/tags/llm"},{"inline":true,"label":"development","permalink":"/ai-project-mapper/blog/tags/development"},{"inline":true,"label":"blog","permalink":"/ai-project-mapper/blog/tags/blog"}],"readingTime":6.93,"hasTruncateMarker":true,"authors":[{"name":"Michael Lynn","title":"Developer Advocate @ MongoDB","url":"https://github.com/mrlynn","imageURL":"https://avatars.githubusercontent.com/u/192552?v=4","key":null,"page":null}],"frontMatter":{"title":"AI-Driven Development","author":"Michael Lynn","author_title":"Developer Advocate @ MongoDB","author_url":"https://github.com/mrlynn","author_image_url":"https://avatars.githubusercontent.com/u/192552?v=4","tags":["ai","llm","development","blog"]},"unlisted":false,"nextItem":{"title":"Getting Started with Project Mapper","permalink":"/ai-project-mapper/blog/2025/03/12/getting-started-with-project-mapper"}}')},8453:(e,t,o)=>{o.d(t,{R:()=>l,x:()=>r});var n=o(6540);const a={},i=n.createContext(a);function l(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);