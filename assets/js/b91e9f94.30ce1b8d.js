"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4196],{1414:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"guides/customization","title":"Customization Guide","description":"This guide explains how to customize Project Mapper to better suit your specific needs.","source":"@site/docs/guides/customization.md","sourceDirName":"guides","slug":"/guides/customization","permalink":"/ai-project-mapper/docs/guides/customization","draft":false,"unlisted":false,"editUrl":"https://github.com/mrlynn/ai-project-mapper/tree/main/docs/docs/guides/customization.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Templates Guide","permalink":"/ai-project-mapper/docs/guides/templates"},"next":{"title":"LLM Workflow Guide","permalink":"/ai-project-mapper/docs/guides/llm-workflow"}}');var s=t(4848),a=t(8453);const o={sidebar_position:3},r="Customization Guide",c={},d=[{value:"Configuration Options",id:"configuration-options",level:2},{value:"Command Line Options",id:"command-line-options",level:3},{value:"Programmatic Options",id:"programmatic-options",level:3},{value:"Creating Custom Templates",id:"creating-custom-templates",level:2},{value:"Understanding Template Structure",id:"understanding-template-structure",level:3},{value:"Adding Your Custom Template",id:"adding-your-custom-template",level:3},{value:"Example: Creating a Custom Template",id:"example-creating-a-custom-template",level:3},{value:"Customizing Ignore Patterns",id:"customizing-ignore-patterns",level:2},{value:"Default Ignore Patterns",id:"default-ignore-patterns",level:3},{value:"Adding Custom Ignore Patterns",id:"adding-custom-ignore-patterns",level:3},{value:"Customizing Semantic Analysis",id:"customizing-semantic-analysis",level:2},{value:"Semantic Analysis Options",id:"semantic-analysis-options",level:3},{value:"Filtering Domain Concepts",id:"filtering-domain-concepts",level:3},{value:"Creating Custom Visualizations",id:"creating-custom-visualizations",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"customization-guide",children:"Customization Guide"})}),"\n",(0,s.jsx)(n.p,{children:"This guide explains how to customize Project Mapper to better suit your specific needs."}),"\n",(0,s.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsx)(n.p,{children:"Project Mapper provides several configuration options that can be used to customize its behavior."}),"\n",(0,s.jsx)(n.h3,{id:"command-line-options",children:"Command Line Options"}),"\n",(0,s.jsx)(n.p,{children:"All of these options can be set via the command line interface:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Default"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"-o, --output <file>"})}),(0,s.jsx)(n.td,{children:"Output file path"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"project-knowledge-transfer.md"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"-i, --ignore <patterns...>"})}),(0,s.jsx)(n.td,{children:"Additional glob patterns to ignore"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"-d, --depth <level>"})}),(0,s.jsx)(n.td,{children:"Maximum directory depth to analyze"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"10"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"-f, --format <format>"})}),(0,s.jsx)(n.td,{children:"Output format (markdown, json)"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"markdown"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"-t, --template <n>"})}),(0,s.jsx)(n.td,{children:"Knowledge transfer template to use"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"standard"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"-v, --verbose"})}),(0,s.jsx)(n.td,{children:"Enable verbose output"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"-s, --semantic"})}),(0,s.jsx)(n.td,{children:"Enable semantic analysis of code"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"true"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"--skip-analysis"})}),(0,s.jsx)(n.td,{children:"Skip code analysis and use existing analysis file"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"--analysis-file <file>"})}),(0,s.jsx)(n.td,{children:"Path to analysis file"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"project-analysis.json"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"--include-guide"})}),(0,s.jsx)(n.td,{children:"Include LLM knowledge transfer guide"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"--generate-questionnaire"})}),(0,s.jsx)(n.td,{children:"Generate a context questionnaire for the project"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"--questionnaire-output <file>"})}),(0,s.jsx)(n.td,{children:"Output file for the questionnaire"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"project-context-questionnaire.md"})})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"programmatic-options",children:"Programmatic Options"}),"\n",(0,s.jsx)(n.p,{children:"When using the API, you can provide the same options as objects:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const options = {\n  template: 'detailed',\n  format: 'markdown',\n  includeGuide: true,\n  ignore: ['node_modules/**', 'dist/**'],\n  depth: 5,\n  verbose: true\n};\n\nconst result = await generateProjectMap('./my-project', options);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"creating-custom-templates",children:"Creating Custom Templates"}),"\n",(0,s.jsx)(n.p,{children:"One of the most powerful ways to customize Project Mapper is by creating your own templates for knowledge transfer documents."}),"\n",(0,s.jsx)(n.h3,{id:"understanding-template-structure",children:"Understanding Template Structure"}),"\n",(0,s.jsxs)(n.p,{children:["Templates are defined in ",(0,s.jsx)(n.code,{children:"src/knowledge-transfer.js"})," as functions that generate content from analysis data. Here's the structure of a template function:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"function generateCustomTemplate(analysis, projectName) {\n  let content = `# ${projectName} Custom Knowledge Transfer\\n\\n`;\n  \n  // Add sections based on analysis data\n  content += `## Your Section Title\\n\\n`;\n  content += `Your section content...\\n\\n`;\n  \n  // Return both the content and a list of sections\n  return {\n    content,\n    sections: [\n      'Your Section Title',\n      // Other sections...\n    ]\n  };\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"adding-your-custom-template",children:"Adding Your Custom Template"}),"\n",(0,s.jsx)(n.p,{children:"To add your own template:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Fork the Project Mapper repository"}),"\n",(0,s.jsxs)(n.li,{children:["Open ",(0,s.jsx)(n.code,{children:"src/knowledge-transfer.js"})]}),"\n",(0,s.jsx)(n.li,{children:"Add your template function"}),"\n",(0,s.jsxs)(n.li,{children:["Register it in the ",(0,s.jsx)(n.code,{children:"TEMPLATES"})," object:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const TEMPLATES = {\n  standard: generateStandardTemplate,\n  minimal: generateMinimalTemplate,\n  detailed: generateDetailedTemplate,\n  custom: generateCustomTemplate  // Add your template here\n};\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsxs)(n.li,{children:["Update the CLI options in ",(0,s.jsx)(n.code,{children:"src/cli.js"})," to include your new template in the help text"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-creating-a-custom-template",children:"Example: Creating a Custom Template"}),"\n",(0,s.jsx)(n.p,{children:"Here's an example of a custom template focused on security aspects:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"function generateSecurityTemplate(analysis, projectName) {\n  let content = `# ${projectName} Security Overview\\n\\n`;\n  \n  // Project Basics\n  content += `## Project Identification\\n\\n`;\n  content += `**Name:** ${analysis.overview.name || projectName}\\n\\n`;\n  content += `**Description:** ${analysis.overview.description || 'No description available'}\\n\\n`;\n  \n  // Dependencies (focusing on security aspects)\n  content += `## Dependencies\\n\\n`;\n  if (analysis.package && analysis.package.dependencies) {\n    content += `### Production Dependencies\\n\\n`;\n    content += `| Dependency | Version | Security Notes |\\n`;\n    content += `|------------|---------|---------------|\\n`;\n    \n    Object.entries(analysis.package.dependencies).forEach(([name, version]) => {\n      content += `| ${name} | ${version} | Needs review |\\n`;\n    });\n    content += '\\n';\n  }\n  \n  // Entry Points\n  content += `## Entry Points\\n\\n`;\n  content += `The following files serve as entry points and should be prioritized for security reviews:\\n\\n`;\n  \n  if (analysis.structure && analysis.structure.entryPoints) {\n    analysis.structure.entryPoints.forEach(entry => {\n      content += `- \\`${entry.path}\\` (${entry.type})\\n`;\n    });\n  }\n  content += '\\n';\n  \n  // Data Processing\n  content += `## Data Processing\\n\\n`;\n  content += `Files that likely handle user input or data processing:\\n\\n`;\n  \n  if (analysis.structure && analysis.structure.importantFiles) {\n    const dataFiles = analysis.structure.importantFiles\n      .filter(file => file.path.includes('data') || \n                      file.path.includes('input') || \n                      file.path.includes('parse'))\n      .slice(0, 10);\n    \n    dataFiles.forEach(file => {\n      content += `- \\`${file.path}\\` (importance score: ${Math.round(file.score)})\\n`;\n    });\n  }\n  content += '\\n';\n  \n  // Return the template result\n  return {\n    content,\n    sections: [\n      'Project Identification',\n      'Dependencies',\n      'Entry Points',\n      'Data Processing'\n    ]\n  };\n}\n\n// Add to TEMPLATES object\nconst TEMPLATES = {\n  // ... existing templates\n  security: generateSecurityTemplate\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"customizing-ignore-patterns",children:"Customizing Ignore Patterns"}),"\n",(0,s.jsx)(n.p,{children:"You can customize which files and directories are ignored during analysis."}),"\n",(0,s.jsx)(n.h3,{id:"default-ignore-patterns",children:"Default Ignore Patterns"}),"\n",(0,s.jsx)(n.p,{children:"By default, Project Mapper ignores:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const DEFAULT_IGNORES = [\n  'node_modules/**',\n  '.git/**',\n  'dist/**',\n  'build/**',\n  '.vscode/**',\n  '.idea/**',\n  'coverage/**',\n  '**/test/**',\n  '**/tests/**',\n  '**/*.min.js',\n  '**/*.min.css',\n  '**/*.map',\n  'package-lock.json',\n  'yarn.lock',\n  'pnpm-lock.yaml'\n];\n"})}),"\n",(0,s.jsx)(n.h3,{id:"adding-custom-ignore-patterns",children:"Adding Custom Ignore Patterns"}),"\n",(0,s.jsx)(n.p,{children:"You can add your own ignore patterns:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'project-mapper -i "**/*.spec.js" "docs/**" "examples/**"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Or programmatically:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const options = {\n  ignore: ['**/*.spec.js', 'docs/**', 'examples/**']\n};\n\nconst result = await generateProjectMap('./my-project', options);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"customizing-semantic-analysis",children:"Customizing Semantic Analysis"}),"\n",(0,s.jsx)(n.p,{children:"You can customize how semantic analysis extracts domain concepts."}),"\n",(0,s.jsx)(n.h3,{id:"semantic-analysis-options",children:"Semantic Analysis Options"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const options = {\n  // Project directory to analyze\n  projectDir: './my-project',\n  \n  // Semantic analysis options\n  semanticOptions: {\n    // Paths to ignore\n    ignorePaths: ['node_modules/**', 'dist/**'],\n    \n    // Include code comments in analysis\n    includeComments: true,\n    \n    // Include documentation files in analysis\n    includeDocs: true,\n    \n    // Include code identifiers in analysis\n    includeIdentifiers: true,\n    \n    // Minimum frequency for a term to be included\n    minTermFrequency: 2,\n    \n    // Maximum number of terms to include\n    maxTerms: 50\n  }\n};\n\n// Perform semantic analysis\nconst semantics = await analyzeProjectSemantics(options.projectDir, options.semanticOptions);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"filtering-domain-concepts",children:"Filtering Domain Concepts"}),"\n",(0,s.jsx)(n.p,{children:"You might want to filter domain concepts to focus on specific areas:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Get semantic analysis\nconst semantics = await analyzeProjectSemantics('./my-project');\n\n// Filter concepts to those related to a specific domain\nconst filteredConcepts = semantics.domainConcepts.filter(concept => {\n  // Only include concepts related to authentication/security\n  return concept.name.includes('auth') || \n         concept.name.includes('secur') || \n         concept.name.includes('user') ||\n         concept.name.includes('login');\n});\n\n// Replace the concepts in the semantics object\nsemantics.domainConcepts = filteredConcepts;\n\n// Use the filtered semantics in knowledge transfer\nanalysis.semantics = semantics;\nconst document = await enhancedKnowledgeTransfer(analysis);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"creating-custom-visualizations",children:"Creating Custom Visualizations"}),"\n",(0,s.jsx)(n.p,{children:"Project Mapper includes several visualization functions"})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(6540);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);