"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[319],{5397:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"concepts/terminology","title":"Project Terminology","description":"This document explains the key terminology and concepts used in Project Mapper\'s codebase and documentation.","source":"@site/docs/concepts/terminology.md","sourceDirName":"concepts","slug":"/concepts/terminology","permalink":"/ai-project-mapper/docs/concepts/terminology","draft":false,"unlisted":false,"editUrl":"https://github.com/mrlynn/ai-project-mapper/tree/main/docs/docs/concepts/terminology.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Architecture Overview","permalink":"/ai-project-mapper/docs/concepts/architecture"},"next":{"title":"CLI Examples","permalink":"/ai-project-mapper/docs/examples/cli-examples"}}');var r=t(4848),s=t(8453);const o={sidebar_position:2},a="Project Terminology",c={},l=[{value:"Core Concepts",id:"core-concepts",level:2},{value:"Knowledge Transfer",id:"knowledge-transfer",level:3},{value:"Analysis",id:"analysis",level:3},{value:"Semantic Understanding",id:"semantic-understanding",level:3},{value:"Project Map",id:"project-map",level:3},{value:"Technical Terms",id:"technical-terms",level:2},{value:"Domain Concept",id:"domain-concept",level:3},{value:"Concept Network",id:"concept-network",level:3},{value:"Template",id:"template",level:3},{value:"Component",id:"component",level:3},{value:"Entry Point",id:"entry-point",level:3},{value:"Dependency Graph",id:"dependency-graph",level:3},{value:"File-Related Terms",id:"file-related-terms",level:2},{value:"Important Files",id:"important-files",level:3},{value:"File Type",id:"file-type",level:3},{value:"Code Analysis Terms",id:"code-analysis-terms",level:2},{value:"AST (Abstract Syntax Tree)",id:"ast-abstract-syntax-tree",level:3},{value:"Export",id:"export",level:3},{value:"Import",id:"import",level:3},{value:"Semantic Analysis Terms",id:"semantic-analysis-terms",level:2},{value:"TF-IDF (Term Frequency-Inverse Document Frequency)",id:"tf-idf-term-frequency-inverse-document-frequency",level:3},{value:"N-gram",id:"n-gram",level:3},{value:"Domain Glossary",id:"domain-glossary",level:3},{value:"CLI Terms",id:"cli-terms",level:2},{value:"Ignore Pattern",id:"ignore-pattern",level:3},{value:"Depth",id:"depth",level:3},{value:"Questionnaire",id:"questionnaire",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"project-terminology",children:"Project Terminology"})}),"\n",(0,r.jsx)(n.p,{children:"This document explains the key terminology and concepts used in Project Mapper's codebase and documentation."}),"\n",(0,r.jsx)(n.h2,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,r.jsx)(n.h3,{id:"knowledge-transfer",children:"Knowledge Transfer"}),"\n",(0,r.jsx)(n.p,{children:'In Project Mapper, "knowledge transfer" refers to the process of extracting and summarizing project knowledge in a format that\'s optimized for LLMs. The knowledge transfer document is the main output of the tool, designed to help AI assistants understand your codebase.'}),"\n",(0,r.jsx)(n.h3,{id:"analysis",children:"Analysis"}),"\n",(0,r.jsx)(n.p,{children:"Analysis is the process of examining a project's structure, files, and code to extract meaningful information. Project Mapper performs several types of analysis:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Structure analysis"}),": Identifies files, directories, and their relationships"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Code analysis"}),": Examines code to extract functions, classes, imports, and exports"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semantic analysis"}),": Extracts domain concepts and terminology"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dependency analysis"}),": Maps relationships between components"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"semantic-understanding",children:"Semantic Understanding"}),"\n",(0,r.jsx)(n.p,{children:"Semantic understanding refers to the ability to extract and understand domain-specific concepts and terminology from the codebase. This goes beyond simple code structure analysis to understand the meaning and relationships between concepts."}),"\n",(0,r.jsx)(n.h3,{id:"project-map",children:"Project Map"}),"\n",(0,r.jsx)(n.p,{children:"A project map is a comprehensive representation of a project's structure, components, and relationships. It includes both the raw analysis data and the formatted knowledge transfer document."}),"\n",(0,r.jsx)(n.h2,{id:"technical-terms",children:"Technical Terms"}),"\n",(0,r.jsx)(n.h3,{id:"domain-concept",children:"Domain Concept"}),"\n",(0,r.jsx)(n.p,{children:"A domain concept is a term or idea that's central to understanding the project's domain. Project Mapper identifies domain concepts based on their frequency and distribution throughout the codebase."}),"\n",(0,r.jsx)(n.h3,{id:"concept-network",children:"Concept Network"}),"\n",(0,r.jsx)(n.p,{children:"The concept network is a graph representation of domain concepts and their relationships. It helps visualize how different concepts in the project are connected."}),"\n",(0,r.jsx)(n.h3,{id:"template",children:"Template"}),"\n",(0,r.jsx)(n.p,{children:"Templates are predefined formats for generating knowledge transfer documents. Project Mapper includes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Standard template"}),": A comprehensive knowledge transfer document"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Minimal template"}),": A brief summary for quick overviews"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Detailed template"}),": An in-depth analysis with additional information"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"component",children:"Component"}),"\n",(0,r.jsx)(n.p,{children:"In Project Mapper terminology, a component refers to a major part of the project's architecture. Components might be directories, modules, or logical groupings of functionality."}),"\n",(0,r.jsx)(n.h3,{id:"entry-point",children:"Entry Point"}),"\n",(0,r.jsxs)(n.p,{children:["An entry point is a file that serves as a main starting point for the application, such as ",(0,r.jsx)(n.code,{children:"index.js"})," or a CLI file. Project Mapper identifies entry points to understand how the application is initialized."]}),"\n",(0,r.jsx)(n.h3,{id:"dependency-graph",children:"Dependency Graph"}),"\n",(0,r.jsx)(n.p,{children:"The dependency graph maps relationships between files in the project, showing which files import or depend on other files. This helps understand the project's structure and data flow."}),"\n",(0,r.jsx)(n.h2,{id:"file-related-terms",children:"File-Related Terms"}),"\n",(0,r.jsx)(n.h3,{id:"important-files",children:"Important Files"}),"\n",(0,r.jsx)(n.p,{children:"Important files are key files in the project identified based on various heuristics, such as:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Being referenced by many other files"}),"\n",(0,r.jsx)(n.li,{children:"Containing many exports"}),"\n",(0,r.jsx)(n.li,{children:"Being entry points"}),"\n",(0,r.jsx)(n.li,{children:"Having significant functionality"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"file-type",children:"File Type"}),"\n",(0,r.jsx)(n.p,{children:"Project Mapper categorizes files based on their extensions (e.g., JavaScript, Markdown, JSON) to understand the project's composition and apply appropriate analysis techniques."}),"\n",(0,r.jsx)(n.h2,{id:"code-analysis-terms",children:"Code Analysis Terms"}),"\n",(0,r.jsx)(n.h3,{id:"ast-abstract-syntax-tree",children:"AST (Abstract Syntax Tree)"}),"\n",(0,r.jsx)(n.p,{children:"An abstract syntax tree is a tree representation of the structure of source code. Project Mapper uses ASTs to analyze JavaScript/TypeScript code and extract information about functions, classes, imports, and exports."}),"\n",(0,r.jsx)(n.h3,{id:"export",children:"Export"}),"\n",(0,r.jsx)(n.p,{children:"Exports are functions, classes, or variables that a module makes available for other modules to use. Project Mapper tracks exports to understand what functionality each module provides."}),"\n",(0,r.jsx)(n.h3,{id:"import",children:"Import"}),"\n",(0,r.jsx)(n.p,{children:"Imports are references to functionality from other modules. Project Mapper tracks imports to understand dependencies between modules."}),"\n",(0,r.jsx)(n.h2,{id:"semantic-analysis-terms",children:"Semantic Analysis Terms"}),"\n",(0,r.jsx)(n.h3,{id:"tf-idf-term-frequency-inverse-document-frequency",children:"TF-IDF (Term Frequency-Inverse Document Frequency)"}),"\n",(0,r.jsx)(n.p,{children:"A numerical statistic used in natural language processing to identify important terms in documents. Project Mapper uses TF-IDF to identify domain concepts based on their frequency and uniqueness."}),"\n",(0,r.jsx)(n.h3,{id:"n-gram",children:"N-gram"}),"\n",(0,r.jsx)(n.p,{children:"An n-gram is a contiguous sequence of n items from a given sample of text. Project Mapper uses n-grams (especially bigrams and trigrams) to identify multi-word concepts that appear frequently together."}),"\n",(0,r.jsx)(n.h3,{id:"domain-glossary",children:"Domain Glossary"}),"\n",(0,r.jsx)(n.p,{children:"The domain glossary is a collection of domain-specific terms and their definitions, generated based on context from the codebase and documentation."}),"\n",(0,r.jsx)(n.h2,{id:"cli-terms",children:"CLI Terms"}),"\n",(0,r.jsx)(n.h3,{id:"ignore-pattern",children:"Ignore Pattern"}),"\n",(0,r.jsxs)(n.p,{children:["Glob patterns that specify which files or directories to exclude from analysis (e.g., ",(0,r.jsx)(n.code,{children:"node_modules/**"}),")."]}),"\n",(0,r.jsx)(n.h3,{id:"depth",children:"Depth"}),"\n",(0,r.jsx)(n.p,{children:"The maximum directory depth to traverse during analysis, used to limit the scope of analysis for large projects."}),"\n",(0,r.jsx)(n.h3,{id:"questionnaire",children:"Questionnaire"}),"\n",(0,r.jsx)(n.p,{children:"A set of questions generated based on project analysis to gather additional context about the project from developers."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);